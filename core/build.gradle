plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.two_ddang.logistics'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('querydslVersion', "5.0.0")  // QueryDSL 버전 명시적으로 설정
}

dependencies {

	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
		annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"
		implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootWar {
    enabled = false
}

war {
    enabled = true
}
