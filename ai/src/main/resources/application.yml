spring:
  application:
    name: ai
  datasource:
    url: jdbc:postgresql://${url}/ddang-logistics
    username: ${username}
    password: ${password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  data:
    redis:
      host: ${redis-url}
      port: ${redis-port}
      username: ${redis-username}
      password: ${redis-password}
  ai:
    vertex:
      ai:
        gemini:
          project-id: ${project-id}
          location: asia-northeast3
    openai:
      api-key: ${openai-api-key}
    retry:
      max-attempts: 2

google:
  maps:
    api:
      key: ${google-maps-api-key}

weather:
  api-key: ${weather-api-key}

slack:
  webhook:
    url: ${slack-webhook-url}
  bot:
    token: ${slack-bot-token}

server:
  port: 19097
  jwt:
    access-expiration: 3600000
    secret-key: 401b09eab3c013d4ca54922bb802bec8fd5318192b0a75f201d8b3727429080fb337591abd3e44453b954555b7a0812e1081c39b740293f765eae731f5a65ed1
    internal-secret-key: 45c7553fdd3c31912b36e569f8e26a4218051ef3709bf4ba16ec9c8d2ba14d535ce63db771f0a7b899b53a3d6f33f8dda7c6c6b1fb35c99d5bb9e93122f82a4b

eureka:
  client:
    service-url:
      defaultZone: http://server:19090/eureka/

management:
  zipkin:
    tracing:
      endpoint: "http://zipkin:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0

openapi:
  service:
    # API Gateway 포트
    url: http://gateway:19091

