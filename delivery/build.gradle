plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.two-ddang.logistics'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('querydslVersion', "5.0.0")  // QueryDSL 버전 명시적으로 설정
}

dependencies {



	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// postgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// msa
		// common
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		// feign
		implementation 'io.micrometer:micrometer-tracing-bridge-brave'
		implementation 'io.github.openfeign:feign-micrometer'
		implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		// circuit breaker
		implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
		runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	//common
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'



	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

def querydslSrcDir = 'src/main/generated'


tasks.named('test') {
	useJUnitPlatform()
}
